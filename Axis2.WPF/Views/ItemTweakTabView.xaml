<UserControl x:Class="Axis2.WPF.Views.ItemTweakTabView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:viewmodels="clr-namespace:Axis2.WPF.ViewModels"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance Type=viewmodels:ItemTweakTabViewModel}"
             d:DesignHeight="600" d:DesignWidth="800">
    <Grid Margin="10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="240" />
        </Grid.ColumnDefinitions>

        <!-- Left Panel: Item Properties -->
        <ScrollViewer Grid.Column="0" VerticalScrollBarVisibility="Auto" Padding="0,0,10,0">
            <StackPanel>
                <Expander Header="Attributes" IsExpanded="True" Width="264">
                    <StackPanel>
                        <WrapPanel Orientation="Horizontal" Margin="5">
                            <CheckBox Content="Identified" IsChecked="{Binding IsIdentified}" Margin="2"/>
                            <CheckBox Content="Decay" IsChecked="{Binding IsDecay}" Margin="2"/>
                            <CheckBox Content="Newbie" IsChecked="{Binding IsNewbie}" Margin="2"/>
                            <CheckBox Content="Always Moveable" IsChecked="{Binding IsAlwaysMoveable}" Margin="2"/>
                            <CheckBox Content="Never Moveable" IsChecked="{Binding IsNeverMoveable}" Margin="2"/>
                            <CheckBox Content="Magic" IsChecked="{Binding IsMagic}" Margin="2"/>
                            <CheckBox Content="Owned By Town" IsChecked="{Binding IsOwnedByTown}" Margin="2"/>
                            <CheckBox Content="Invisible" IsChecked="{Binding IsInvisible}" Margin="2"/>
                            <CheckBox Content="Cursed" IsChecked="{Binding IsCursed}" Margin="2"/>
                            <CheckBox Content="Damned" IsChecked="{Binding IsDamned}" Margin="2"/>
                            <CheckBox Content="Blessed" IsChecked="{Binding IsBlessed}" Margin="2"/>
                            <CheckBox Content="Sacred" IsChecked="{Binding IsSacred}" Margin="2"/>
                            <CheckBox Content="For Sale" IsChecked="{Binding IsForSale}" Margin="2"/>
                            <CheckBox Content="Stolen" IsChecked="{Binding IsStolen}" Margin="2"/>
                            <CheckBox Content="Can Decay" IsChecked="{Binding CanDecay}" Margin="2"/>
                            <CheckBox Content="Statics" IsChecked="{Binding IsStatics}" Margin="2"/>
                        </WrapPanel>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="5">
                            <Button Content="Reset" Command="{Binding ResetAttributesCommand}" Padding="5,2"/>
                            <Button Content="Set" Command="{Binding SetAttributesCommand}" Margin="5,0,0,0" Padding="5,2"/>
                            <TextBlock Text="Hex:" VerticalAlignment="Center" Margin="10,0,5,0"/>
                            <TextBox Text="{Binding CurrentAttributesValue, Mode=TwoWay}" Width="70" VerticalAlignment="Center"/>
                        </StackPanel>
                    </StackPanel>
                </Expander>

                <Expander Header="Types, Misc, Tags" IsExpanded="True" Margin="0,5,0,0">
                    <Grid Margin="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <TextBlock Text="Type:" Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Margin="2"/>
                        <ComboBox ItemsSource="{Binding Types}" SelectedItem="{Binding SelectedType}" Grid.Row="0" Grid.Column="1" Margin="2"/>
                        <Button Content="Set" Command="{Binding SetTypesCommand}" Grid.Row="0" Grid.Column="2" Margin="2" Padding="5,2"/>

                        <TextBlock Text="Misc:" Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Margin="2"/>
                        <ComboBox ItemsSource="{Binding MiscOptions}" SelectedItem="{Binding SelectedMiscOption}" Grid.Row="1" Grid.Column="1" Margin="2"/>
                        <Button Content="Set" Command="{Binding SetMiscCommand}" Grid.Row="1" Grid.Column="2" Margin="2" Padding="5,2"/>

                        <TextBlock Text="Tag:" Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" Margin="2"/>
                        <ComboBox ItemsSource="{Binding Tags}" SelectedItem="{Binding SelectedTag}" Grid.Row="2" Grid.Column="1" Margin="2"/>
                        <Button Content="Set" Command="{Binding SetTagCommand}" Grid.Row="2" Grid.Column="2" Margin="2" Padding="5,2"/>
                    </Grid>
                </Expander>

                <Expander Header="Wizards &amp; Events" IsExpanded="True" Margin="0,5,0,0">
                    <StackPanel Orientation="Vertical" Margin="5">
                        <Button Content="Set Events" Command="{Binding SetEventsCommand}" Padding="5,2"/>
                        <Button Content="Open Door Wizard" Command="{Binding OpenDoorWizardCommand}" Margin="0,5,0,0" Padding="5,2"/>
                        <Button Content="Open Light Wizard" Command="{Binding OpenLightWizardCommand}" Margin="0,5,0,0" Padding="5,2"/>
                    </StackPanel>
                </Expander>
            </StackPanel>
        </ScrollViewer>

        <!-- Center Panel: Item Preview -->
        <GroupBox Header="Item Preview" Grid.Column="1" Margin="5,0,5,0">
            <Border BorderBrush="DarkGray" BorderThickness="1" Background="#FFE0E0E0" Margin="5">
                <Image Source="{Binding ItemPreviewImage}" Stretch="Uniform" />
                <!-- This Image will display the preview. We'll need to bind its Source. -->
            </Border>
        </GroupBox>

        <!-- Right Panel: Color Palette -->
        <GroupBox Header="Quick Color Palette" Grid.Column="2">
            <StackPanel>
                <ItemsControl ItemsSource="{Binding QuickColorPalette}" Margin="5">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid Columns="8" Rows="8"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border BorderBrush="Gray" BorderThickness="1" Width="22" Height="22" Margin="1">
                                <Border.Background>
                                    <SolidColorBrush Color="{Binding Color}"/>
                                </Border.Background>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                        <i:InvokeCommandAction Command="{Binding DataContext.SelectColorCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                               CommandParameter="{Binding}"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="MouseRightButtonDown">
                                        <i:InvokeCommandAction Command="{Binding DataContext.ApplyHueToPaletteCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                               CommandParameter="{Binding}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <Border BorderBrush="Black" BorderThickness="1" Margin="5,10,5,5" Height="20">
                    <ItemsControl ItemsSource="{Binding Spectrum}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Rectangle Width="7" Height="20">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{Binding}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Border>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="5">
                    <Button Content="Set Color" Command="{Binding SetColorCommand}" Padding="5,2" Width="65"/>
                    <Button Content="Color Selector" Command="{Binding OpenColorSelectorCommand}" Margin="5,0,0,0" Padding="5,2"/>
                </StackPanel>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="5">
                    <Button Content="Reset Hue" Command="{Binding ResetHueCommand}" Padding="5,2" Width="65"/>
                    <Button Content="Save Palette" Command="{Binding SavePaletteCommand}" Margin="5,0,0,0" Padding="5,2"/>
                    <Button Content="Load Palette" Command="{Binding LoadPaletteCommand}" Margin="5,0,0,0" Padding="5,2"/>
                </StackPanel>
            </StackPanel>
        </GroupBox>
    </Grid>
</UserControl>